{"version":3,"sources":["components/BaseEntry/BaseEntry.module.css","components/BaseEntry/BaseEntry.jsx","entries/SampleEntry/SampleEntry.js"],"names":["module","exports","BaseEntry","children","className","props","styles","baseEntry","appearAnimation","keyframes","Content","styled","div","Placeholder","PressContainer","SampleEntry","useState","assetsLoaded","setAssetsLoaded","assetsError","setAssetsError","chillTime","setChillTime","audioGainRef","useRef","audioContextRef","completeAssets","playSound","a","audioContext","AudioContext","audioGain","createGain","audioSource","createBufferSource","fetch","then","res","arrayBuffer","buffer","decodeAudioData","audioBuffer","connect","destination","gain","setValueAtTime","currentTime","start","onended","current","useEffect","loadFont","customFont","FontFace","load","document","fonts","add","s","image","Image","src","onload","type","onChange","event","target","value","min","max","defaultValue","onClick","color"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,sLCcfC,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcC,EAA3B,wBAChB,6CAAKD,UAAS,UAAKE,IAAOC,UAAZ,YAAyBH,IAAiBC,GAAxD,aACGF,MCACK,EAAkBC,YAAH,4FAUfC,EAAUC,IAAOC,IAAV,gQAQEJ,GAGTK,EAAcF,IAAOC,IAAV,mIAQXE,EAAiBH,IAAOC,IAAV,4SAOLJ,GAqGAO,UA1FK,WAClB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAeC,mBACfC,EAAkBD,mBAClBE,EAAiBT,EAAe,EAEhCU,EAAS,uCAAG,kCAAAC,EAAA,6DACVC,EAAe,IAAIC,aACnBC,EAAYF,EAAaG,aACzBC,EAAcJ,EAAaK,qBAHjB,SAIUC,MAAM,eAC7BC,MAAK,SAACC,GAAD,OAASA,EAAIC,iBAClBF,MAAK,SAACG,GAAD,OAAYV,EAAaW,gBAAgBD,MANjC,OAIVE,EAJU,OAQhBR,EAAYM,OAASE,EACrBR,EAAYS,QAAQX,GAEpBA,EAAUW,QAAQb,EAAac,aAC/BZ,EAAUa,KAAKC,eAAe,EAAGhB,EAAaiB,aAE9Cb,EAAYc,QACZd,EAAYe,QAAU,WACpB1B,GAAa,IAEfC,EAAa0B,QAAUlB,EACvBN,EAAgBwB,QAAUpB,EAC1BP,GAAa,GApBG,4CAAH,qDAqDf,OAvBA4B,qBAAU,WACR,IACE,IAAMC,EAAQ,uCAAG,4BAAAvB,EAAA,6DACTwB,EAAa,IAAIC,SACrB,aACA,uCAHa,SAKTD,EAAWE,OALF,OAMfC,SAASC,MAAMC,IAAIL,GACnBlC,GAAgB,SAACwC,GAAD,OAAOA,EAAI,KAPZ,2CAAH,qDASdP,IAEA,IAAMQ,EAAQ,IAAIC,MAClBD,EAAME,IAAM,iBACZF,EAAMG,OAAS,WACb5C,GAAgB,SAACwC,GAAD,OAAOA,EAAI,MAE7B,SACAtC,GAAe,MAEhB,IAGD,cAAC,EAAD,UACGM,EACC,cAAChB,EAAD,UACGW,EACC,uBACE0C,KAAK,QACLC,SArCS,SAACC,GACpB1C,EAAa0B,QAAQL,KAAKC,eACxBoB,EAAMC,OAAOC,MAAQ,IACrB1C,EAAgBwB,QAAQH,cAmChBsB,IAAI,IACJC,IAAI,MACJC,aAAa,QAGf,cAACxD,EAAD,CAAgByD,QAAS5C,EAAzB,8BAIJ,cAACd,EAAD,UACGM,EACC,yEAEA,cAAC,aAAD,CAAYqD,MAAM","file":"static/js/4.ad896f97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseEntry\":\"BaseEntry_baseEntry__2ZwUk\"};","import React from \"react\"\nimport styles from \"./BaseEntry.module.css\"\nimport PropTypes from \"prop-types\"\n\nconst BaseEntry = ({ children, className, ...props }) => (\n  <div className={`${styles.baseEntry} ${className}`} {...props}>\n    {children}\n  </div>\n)\n\nBaseEntry.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n}\n\nexport default BaseEntry\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { ClipLoader } from \"react-spinners\"\nimport styled, { keyframes } from \"styled-components\"\n\nimport BaseEntry from \"../../components/BaseEntry/BaseEntry\"\n\nconst appearAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-basis: 100%;\n  min-height: 100%;\n  background: #f5f5f5 url(/sample-bg.gif) no-repeat center;\n  background-size: cover;\n  align-items: center;\n  justify-content: center;\n  animation: ${appearAnimation} 0.5s ease;\n`\n\nconst Placeholder = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`\n\nconst PressContainer = styled.div`\n  font-family: Poiret One;\n  font-size: 3rem;\n  font-weight: 400;\n  margin: 0 auto;\n  color: white;\n  text-shadow: 2px 5px 5px #222222;\n  animation: ${appearAnimation} 0.5s ease;\n\n  @media (min-width: 50rem) {\n    font-size: 5rem;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst SampleEntry = () => {\n  const [assetsLoaded, setAssetsLoaded] = useState(0)\n  const [assetsError, setAssetsError] = useState(false)\n  const [chillTime, setChillTime] = useState(false)\n  const audioGainRef = useRef()\n  const audioContextRef = useRef()\n  const completeAssets = assetsLoaded > 1\n\n  const playSound = async () => {\n    const audioContext = new AudioContext()\n    const audioGain = audioContext.createGain()\n    const audioSource = audioContext.createBufferSource()\n    const audioBuffer = await fetch(\"/sample.mp3\")\n      .then((res) => res.arrayBuffer())\n      .then((buffer) => audioContext.decodeAudioData(buffer))\n\n    audioSource.buffer = audioBuffer\n    audioSource.connect(audioGain)\n\n    audioGain.connect(audioContext.destination)\n    audioGain.gain.setValueAtTime(1, audioContext.currentTime)\n\n    audioSource.start()\n    audioSource.onended = () => {\n      setChillTime(false)\n    }\n    audioGainRef.current = audioGain\n    audioContextRef.current = audioContext\n    setChillTime(true)\n  }\n\n  const changeVolume = (event) => {\n    audioGainRef.current.gain.setValueAtTime(\n      event.target.value / 100,\n      audioContextRef.current.currentTime\n    )\n  }\n\n  useEffect(() => {\n    try {\n      const loadFont = async () => {\n        const customFont = new FontFace(\n          \"Poiret One\",\n          \"url(/fonts/PoiretOne-Regular.woff2)\"\n        )\n        await customFont.load()\n        document.fonts.add(customFont)\n        setAssetsLoaded((s) => s + 1)\n      }\n      loadFont()\n\n      const image = new Image()\n      image.src = \"/sample-bg.gif\"\n      image.onload = () => {\n        setAssetsLoaded((s) => s + 1)\n      }\n    } catch {\n      setAssetsError(true)\n    }\n  }, [])\n\n  return (\n    <BaseEntry>\n      {completeAssets ? (\n        <Content>\n          {chillTime ? (\n            <input\n              type=\"range\"\n              onChange={changeVolume}\n              min=\"0\"\n              max=\"100\"\n              defaultValue=\"100\"\n            />\n          ) : (\n            <PressContainer onClick={playSound}>Press to Chill</PressContainer>\n          )}\n        </Content>\n      ) : (\n        <Placeholder>\n          {assetsError ? (\n            <span>Unable to load assets. Please refresh</span>\n          ) : (\n            <ClipLoader color=\"black\" />\n          )}\n        </Placeholder>\n      )}\n    </BaseEntry>\n  )\n}\n\nexport default SampleEntry\n"],"sourceRoot":""}